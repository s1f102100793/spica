datasource db {
  provider = "postgresql"
  url      = env("API_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Task {
  id        String   @id
  userId    String
  label     String
  done      Boolean
  createdAt DateTime
}

model Employee {
  firebaseUid String           @id
  name        String
  email       String           @unique
  createdAt   DateTime
  profile     EmployeeProfile?
  Company     Company?         @relation(fields: [companyId], references: [id])
  companyId   Int?
  UserCompany UserCompany[]
  UserRole    UserRole[]
  Tip         Tip[]
}

model EmployeeProfile {
  profileId     Int      @id @default(autoincrement())
  employeeId    String   @unique
  profile_image String
  createdAt     DateTime
  employee      Employee @relation(fields: [employeeId], references: [firebaseUid])
}

model Company {
  id          Int           @id @default(autoincrement())
  name        String
  address     String
  description String
  employees   Employee[]
  tips        Tip[]
  UserCompany UserCompany[]
}

model UserCompany {
  id        Int      @id @default(autoincrement())
  user      Employee @relation(fields: [userId], references: [firebaseUid])
  userId    String
  company   Company  @relation(fields: [companyId], references: [id])
  companyId Int
  @@unique([userId, companyId])
}

model Role {
  id       Int        @id @default(autoincrement())
  roleName String
  users    UserRole[]
}

model UserRole {
  id     Int      @id @default(autoincrement())
  user   Employee @relation(fields: [userId], references: [firebaseUid])
  userId String
  role   Role     @relation(fields: [roleId], references: [id])
  roleId Int
}

model Tip {
  id        Int      @id @default(autoincrement())
  user      Employee @relation(fields: [userId], references: [firebaseUid])
  userId    String
  company   Company  @relation(fields: [companyId], references: [id])
  companyId Int
  amount    Float
  date      DateTime
}
